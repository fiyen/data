➜游戏《江南百景图》有哪些有趣的细节？
http://www.zhihu.com/question/405706743/answer/1341692005?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title	41411
<p></p><p>我们在设计城中的建筑和装饰物时，参考并还原了大量的古画细节：</p><p><img src="https://pic1.zhimg.com/v2-cc96cdddcb8711f322ba0fa3c98c306c_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-cc96cdddcb8711f322ba0fa3c98c306c" data-watermark-src="v2-8dd3362f81c10685fecf2afdb38a318a" data-private-watermark-src="v2-eada5851d9f99af6cd97a0629551c987" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-d75d45a1431dd428d2ff6a4b01637017_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-d75d45a1431dd428d2ff6a4b01637017" data-watermark-src="v2-5d53f8ec2a8eee2cbb6fa4d3487ef005" data-private-watermark-src="v2-b9e68513999eef58b09e1a23a18df60f" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-9cc2dd33b5a98c26a965ed19f43345c8_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-9cc2dd33b5a98c26a965ed19f43345c8" data-watermark-src="v2-27efdec20bfdf6b9a31b93d8b74c129e" data-private-watermark-src="v2-5d52190cbe8f85b07b0477edcc3377ac" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-eeda8c3ffbf1c1b331010cb3e7e7bac4_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-eeda8c3ffbf1c1b331010cb3e7e7bac4" data-watermark-src="v2-74fbe99f350ee35121d739f1e3ad686e" data-private-watermark-src="v2-6790613077e9c3ee1996a1603085ff14" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-a527c4abb0089ae894d7d7a0a6b76b3f_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-a527c4abb0089ae894d7d7a0a6b76b3f" data-watermark-src="v2-1efecd685a5f4fc2d77414810b6d838f" data-private-watermark-src="v2-25114e442ab73996b6240f289d82d4d1" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-fc6e869edc5da4f146cf0e0476828aff_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-fc6e869edc5da4f146cf0e0476828aff" data-watermark-src="v2-a6b2256596b890b7439bf0fe8be829a3" data-private-watermark-src="v2-594b936e4cf29cb5da1da352051e6571" style="max-width: 400px;"></p><p>我们并没有在建筑的介绍里写冗长的八股文，而是写了一些有趣的小故事。主人公春花、阿北、小强的故事碎片被散落在各种不同的建筑介绍里。玩家需要耐心的阅读并梳理顺序，才能发现其中的奥秘</p><p><img src="https://pic1.zhimg.com/v2-fa1d4d93df027aa9b5794ded3a4b1e4b_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="2688" data-rawheight="1242" data-watermark="watermark" data-original-src="v2-fa1d4d93df027aa9b5794ded3a4b1e4b" data-watermark-src="v2-70441c95c82f54ccf289866f58b8d164" data-private-watermark-src="v2-fddeb6ba67babb2b06eb7de84413477f" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-3bcb30b012d8150cab064ead3cb683c0_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="2688" data-rawheight="1242" data-watermark="watermark" data-original-src="v2-3bcb30b012d8150cab064ead3cb683c0" data-watermark-src="v2-a1afc961a9b590efc156a049848f6c51" data-private-watermark-src="v2-7c1f6fe5be9df386d247570e0f718101" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-6064e552d4bb2a71484da6a4e624e8e2_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="2688" data-rawheight="1242" data-watermark="watermark" data-original-src="v2-6064e552d4bb2a71484da6a4e624e8e2" data-watermark-src="v2-4d1b39bdfd504b5808f06ce7773bc54d" data-private-watermark-src="v2-58d30481febbee47021b91c5304d5707" style="max-width: 400px;"></p><p>虽然没有在界面上展示，但是，城中的居民的确是有隐藏的关系属性的。</p><p>比如，居民可能会成为朋友，也可能会成为仇家。有些居民会成为情侣，已成为情侣的居民可能会结婚，也可能会分手。成为仇家的居民有可能会一笑泯恩仇，也有可能老死不相往来，甚至气到搬家。</p><p><img src="https://pic1.zhimg.com/v2-2686383b7812d679bae731757dea4412_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="2688" data-rawheight="1242" data-watermark="watermark" data-original-src="v2-2686383b7812d679bae731757dea4412" data-watermark-src="v2-7326d36301cf9c717f52be36c9f02cc3" data-private-watermark-src="v2-b362c572edc528f1ae6c60728af4c484" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-1e832e9a9c07344d903b4fa2b8416e99_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="2688" data-rawheight="1242" data-watermark="watermark" data-original-src="v2-1e832e9a9c07344d903b4fa2b8416e99" data-watermark-src="v2-cc16a43ea58baa74b4204fc9dd499b1d" data-private-watermark-src="v2-23a5a179559b73f8a14890c3773f8b60" style="max-width: 400px;"></p><p>游戏中角色的设定也有一切有趣的细节</p><p><img src="https://pic1.zhimg.com/v2-b4c45e7bc048b2412595550ad1216262_720w.jpg?rss" data-caption="秦良玉的服装是真实的（右图来自网络）" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-b4c45e7bc048b2412595550ad1216262" data-watermark-src="v2-d9b5119cc21bba04973a72c84748336f" data-private-watermark-src="v2-8eecfce5f16bb7070580cd2fd329c41c" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-196eb27a5e5bbfd96a403b1c0d270b0a_720w.jpg?rss" data-caption="徐霞客的衣服纹饰是青蛙，游戏中看不到脚，但是他确实有一只小青蛙宠物" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-196eb27a5e5bbfd96a403b1c0d270b0a" data-watermark-src="v2-c547cb83872ecb811721f4ac79432611" data-private-watermark-src="v2-28207f16213662b5fe35215f83aa2987" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-d47652e117cf88c6d26405b37ede5bde_720w.jpg?rss" data-caption="沈周作为文征明的老师，他的衣服是文征明亲自绘制赠送的" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-d47652e117cf88c6d26405b37ede5bde" data-watermark-src="v2-38ba6389461ba2aae7302bda6c76a084" data-private-watermark-src="v2-0c96457fe53482fc50a95eb95e58c53c" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-4c2a451caec5a3cc9942cdefbc58ea1e_720w.jpg?rss" data-caption="郑和的宝船上有一只麒麟（长颈鹿），是其永乐十二年下西洋带回来的" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-4c2a451caec5a3cc9942cdefbc58ea1e" data-watermark-src="v2-6ebf44cbd97e13fcd22d9617a627bb8e" data-private-watermark-src="v2-ea5d09f75f4ddba36c89f6c3d08a5d45" style="max-width: 400px;"></p><p>还有就是，我们游戏的标题，是仿照的文征明的手书字体哦</p><p><img src="https://pic1.zhimg.com/v2-348d8728ff74ab24130d7e1079edc312_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1280" data-rawheight="720" data-watermark="watermark" data-original-src="v2-348d8728ff74ab24130d7e1079edc312" data-watermark-src="v2-57e9409a9080fd1d460e622ac9d500af" data-private-watermark-src="v2-99929a727ab0436d44ec422bee2906a9" data-tags="politic" style="max-width: 400px;"></p><p></p>
➜游戏中有哪些看上去很简单，但实际上需要极高技术力或是极高成本的细节？
http://www.zhihu.com/question/405291121/answer/1340300163?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title	55810
<p>移动。</p><p>角色移动是大部分游戏的玩法基础，它看起来如此的简单以至于很容易被玩家忽略。</p><p>不过实际上，角色的移动涉及到动画、渲染、物理、同步等多项技术以及大量的美术工作，而且还经常会遇到一些设计上让人陷入两难的问题，想做好真的不容易。</p><hr><p>我们先简单说一下角色移动的基本原理。游戏世界与真实世界相同，也是一个三维的空间(2D游戏是二维空间)，我们可以用x y z来表示一个角色的位置，所以角色移动就是按照一定方式在一定时间内修改角色的位置信息。</p><a data-draft-node="block" data-draft-type="link-card" href="https://zhuanlan.zhihu.com/p/77527752" data-image="https://pic1.zhimg.com/v2-f109ead43c8c4e7532c817ff9490805f_bh.jpg" data-image-width="1920" data-image-height="1080" class="internal">Jerish：游戏中的角色是如何“动”起来的？</a><p><img src="https://pic1.zhimg.com/v2-909694996be7184f99acfc63010405e3_720w.jpg?rss" data-rawwidth="1075" data-rawheight="579" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-909694996be7184f99acfc63010405e3" data-watermark-src="v2-33edf0aeb52bdea14c91a4aa1a566b6f" data-private-watermark-src="v2-d5de89090e210ffdea58a8e14284954a" style="max-width: 400px;"></p><p>假如我们控制的是一个人形的角色，那面对的第一个问题就是如何让角色走的真实？换句话说就是解决“滑步”问题，滑步产生的根本原因是——<b><i>动画上的移动与其实际位置的移动不匹配</i></b>。</p><p><img src="https://pic1.zhimg.com/v2-e020260958926b9070063870f400e2ea_720w.jpg?rss" data-rawwidth="720" data-rawheight="367" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-e020260958926b9070063870f400e2ea" data-watermark-src="v2-ccda8988dc813ae5ac46cb3548b45a25" data-private-watermark-src="v2-d7936c6b07530bf6667c2be098014cc1" style="max-width: 400px;"></p><p>因为我们一个角色的移动需要有两个基本的系统共同维护，一个是角色的动画系统，另一个是隐藏在代码背后的位置计算系统（可以称为移动组件系统）。角色动画系统负责按照时间戳播放其动画，一般由美术通过三维建模软件制作（2D的比较简单，就是按帧替换图片，3D一般是骨骼动画）。将动画导入到游戏引擎中，就可以看到该角色会不停播放移动的动画，但是他不会向前产生任何位移。</p><p><img src="https://pic1.zhimg.com/v2-01988f7135a516eed7df26569161945e_720w.jpg?rss" data-rawwidth="512" data-rawheight="192" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-01988f7135a516eed7df26569161945e" data-watermark-src="v2-f193fcdfc490f9a5c10376342cd8a10f" data-private-watermark-src="v2-5d802b1083ee932fa3b3d4b32a53266a" style="max-width: 400px;"></p><p>这时候如果把移动组件系统应用起来，也就是每当玩家播放移动动画的时候计算其应该走的位移长度并应用就可以实现通常意义上的角色移动了。但是角色如果不是匀速移动也不是匀加速移动呢，我们的移动组件系统根本没法算（就算你代码写的再好也很难达到美术想要的效果），所以会尝试Rootmotion的解决方案，即每一帧的位置交给美术处理，他们在做动画的时候把位移信息也写到动画里面，我们移动的时候读取美术的数据就好了。</p><a data-draft-node="block" data-draft-type="link-card" href="https://zhuanlan.zhihu.com/p/74554876" data-image="https://pic1.zhimg.com/v2-3b004bee185a81256c9251347196ab94_bh.jpg" data-image-width="1920" data-image-height="1080" class="internal">Jerish：《Exploring in UE4》RootMotion详解【原理分析】</a><p><img src="https://pic1.zhimg.com/v2-ef897afd8cae90af5170b30ad8898d6a_720w.jpg?rss" data-rawwidth="951" data-rawheight="348" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-ef897afd8cae90af5170b30ad8898d6a" data-watermark-src="v2-8f25cf7df0d58d9413a41903d94d62be" data-private-watermark-src="v2-6983837e0e620bf1100497e234e4b6bd" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-d841ea668e055aecf7792623d229a5c7_720w.jpg?rss" data-rawwidth="444" data-rawheight="250" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-d841ea668e055aecf7792623d229a5c7" data-watermark-src="v2-82b4310db6dbee7c543c4d0c603221d6" data-private-watermark-src="v2-4ee47cc9d12ef8185494c499e22e4a57" style="max-width: 400px;"></p><p>当然，考虑到工作量等问题，我们不能都用rootmotion解决。角色还有一些通用的但是需要特殊处理的状态，比如转弯、转身、突然停住等，显然转弯的时候玩家的身体会倾斜、转身时候我们的脚步应该逐渐踩过去，突然停住要有一个刹住脚步并恢复的效果（而不是直接滑过去），这些一般我们使用动画状态机配合blendspace可以解决大部分问题，同时也需要美术制作很多动画资源。仔细观察，你会发现很多游戏都没有处理，就是因为太麻烦。</p><p><img src="https://pic1.zhimg.com/v2-c80d8e6408824f0d54ffc30606956815_720w.jpg?rss" data-rawwidth="720" data-rawheight="312" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-c80d8e6408824f0d54ffc30606956815" data-watermark-src="v2-e1631b0225a41431633f982485a0b458" data-private-watermark-src="v2-59a97b9729cc07869986a354d6ff18bc" style="max-width: 400px;"></p><p>不过最近几年，一个称为MotionMatch的技术流行开来，用来解决各种动画的衔接问题。他的基本原理就是首先制作一个丰富的动画资源库，然后在角色移动的时候不断的根据当前角色的动作与状态信息根据算法从资源库里面挑选最适合下一帧播放的动画。育碧的“荣耀战魂For Honor”是游戏领域里面比较成功且典型的例子，不过这项技术对于小的团队明显不太适用。也许多年后会出现一套完善的共享开源动作库，大家都可以体验到该技术带来的便捷了。</p><p><img src="https://pic1.zhimg.com/v2-77371b556af0b0c2e6c00d6cafa92a2a_720w.jpg?rss" data-rawwidth="942" data-rawheight="469" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-77371b556af0b0c2e6c00d6cafa92a2a" data-watermark-src="v2-9b63a2f897593e20a9700c4f2779cdbd" data-private-watermark-src="v2-69fceeab806b4ec169d65c4e2159d659" style="max-width: 400px;"></p><p><a href="//link.zhihu.com/?target=https%3A//www.gdcvault.com/play/1023280/Motion-Matching-and-The-Road" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://www.</span><span class="visible">gdcvault.com/play/10232</span><span class="invisible">80/Motion-Matching-and-The-Road</span><span class="ellipsis"></span></a></p><p>好了，说了这么多问题，是不是就可以让角色愉快的移动了呢？</p><p>还早着呢，下面还有一堆问题等着我们解决，而且不同的游戏面对情况不同。</p><p><b>1.碰撞</b></p><p>一个玩家动起来了，那如果遇到了障碍怎么办呢？如果撞到了另一个玩家，可以把人顶走么？玩家上楼梯是一级一级上还是平滑着上？玩家在多少度的斜坡上可以走呢？类似的问题数不胜数，很多都是游戏设计上的问题。这些问题大部分可以在物理引擎的支持下，通过射线检测等方式处理，但是也有一些不好处理的情况。</p><p><b>2.特殊模式</b></p><p>前面说到的只是角色行走，在游戏中设计者的思路是天马行空的，策划可能想让角色飞起来、游泳、吊单杆、爬梯子、开飞机、以及各种逼牛顿从棺材板出来的多段跳、轻功等，如何处理这些移动模式呢？这些东西随便拎出来一个就够程序和美术做一阵的。</p><p><img src="https://pic1.zhimg.com/v2-bdd7b8fce517d1c95e2f1c78a0f47d19_720w.jpg?rss" data-rawwidth="270" data-rawheight="142" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-bdd7b8fce517d1c95e2f1c78a0f47d19" data-watermark-src="v2-e776e2c5bca52ed6e0f4b867835d0b13" data-private-watermark-src="v2-6e63939d9a91413be41e550722042373" style="max-width: 400px;"></p><p><b>3.特殊对象</b></p><p>我们控制的角色不一定是人形的角色，还可能是汽车、动物。</p><p>对于汽车，好处是我们基本不用考虑动画的适配问题，但是我们需要程序模拟出其移动的轨迹，这就必须要涉及到物理引擎的使用。</p><p>对于动物，我们需要解决一些骨骼的处理问题，由于人形角色在游戏中使用的比较广泛，相关的系统支持的都还算不错，但是由于动物的结构与人不同，所以我们需要特殊处理，这也就意味着人形的骨骼资源不能适配到动物上。如果你做了各种结构迥异的生物，那美术就要被累死了。</p><p><img src="https://pic1.zhimg.com/v2-07402cca55b056c001401311d096dd97_720w.jpg?rss" data-rawwidth="960" data-rawheight="540" data-size="normal" data-caption="" data-watermark="original" data-original-src="v2-07402cca55b056c001401311d096dd97" data-watermark-src="v2-63b7509c6434d17bc3eaa4541626caa9" data-private-watermark-src="v2-be8a17674525c0a7b4e53abfe6b5e2d6" style="max-width: 400px;"></p><p><b>4.多个移动状态的衔接</b></p><p>前面提到了角色可能走、跑、唱、跳、飞、游等，当你从一个状态切换到另一个状态时应该如何衔接？走着走着突然被车撞飞（有点惨），是应该头着地还是屁股着地？是被撞的一瞬间就切换成飞出去的动画么？假如你往前翻越一个栅栏的时候被打了一枪，应该往前还是往后倒？翻墙的时候能翻越多高多厚的墙体？</p><p>有些时候我们可以开启角色的ragdoll，完全交给物理引擎去处理一些移动模拟。但是大部分情况，我们需要玩家的控制，不可能完全交给物理引擎。</p><p><b>5.移动同步</b></p><p>前面说了那么多，还只是针对单机游戏。如果你是网游，那么你的角色动起来的时候应该如何告诉其他客户端怎么动？如果延迟过大造成两个客户端的位置或者动画不一样怎么办？在很多游戏中，想解决移动同步是最难的，因为玩家的位置每一帧都可能在变化。</p><a data-draft-node="block" data-draft-type="link-card" href="https://zhuanlan.zhihu.com/p/34257208" data-image="https://pic1.zhimg.com/v2-a54c04cb0182427001de3f7646cbe99a_bh.jpg" data-image-width="1920" data-image-height="1080" class="internal">Jerish：《Exploring in UE4》移动组件详解[原理分析]（2019.7.14更新）</a><p><b>6.其他细节</b></p><p>比如关卡这个地方能不能走？可以采用常见的空气墙处理</p><p>能不能两个人一起走？如果一个玩家站在那里，其他玩家过不去可能体验会很差，所以可能考虑调整碰撞体大小来让两个人可以并排通过。当然，这也涉及到关卡的设计优劣</p><p>走了一半穿模怎么办？调整动画或者碰撞体</p><p><br></p><p>欢迎大家继续补充~</p><hr><p>其实角色移动不是简单的与某几个系统有关，可以说他涉及到了整个Gameplay的大部分设计逻辑，甚至在一些游戏中，我们认为他是游戏的玩法核心也不为过。</p><p><br></p><p><b><i>然而，很多时候，他显得那么自然以至于很多玩家都将其忽略了。</i></b></p>