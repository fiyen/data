➜下一代CPU将住在冰箱里
https://www.solidot.org/story?sid=7157	1500
普渡大学的研究人员<a href="http://thefutureofthings.com/news/1252/refrigerator-cools-future-computers.html">创造了一种微型致冷系统</a>，小到足以安装在笔记本电脑内。研究人员称，在电脑里使用这种微型致冷系统可以戏剧性增加移除自微芯片的热量，因此能促进芯片性能，同时缩小电脑体积。
➜阿波罗14号的宇航员Mitchell博士称存在外星人
https://www.solidot.org/story?sid=7158	3900
<a href="http://en.wikipedia.org/wiki/Edgar_Mitchell">Edgar Mitchell博士</a>，77岁，前NASA宇航员，曾随阿波罗14号成为第6位登上月球的人，并且是最长月球行走记录的保持者。在接受英国一家电台的采访中<a href="http://www.kerrangradio.co.uk/Article.asp?id=804160&amp;spid=">宣称</a>UFO是真的，外星人到访过地球几次，但政府掩盖了秘密。他<a href="http://science.slashdot.org/article.pl?sid=08/07/24/1610229">声称</a>外星飞船、小绿人、罗斯韦尔事件等等之类都是是真的。他说与外星人接触的太空总署内部人士将外星生物描述成“很小的人，看起来与我们大不相同”。他从MIT获得博士学位。
➜研究人员创造高度预测性黑名单
https://www.solidot.org/story?sid=7159	5520
使用类似 Google PageRank算法的链接分析，SANS学院和 SRI国际的研究人员创造了一种<a href="http://blogs.zdnet.com/security/?p=1540">新的互联网网络保护服务</a>，重新思考网络黑名单的制定和发布方式。该服务被称为 Highly Predictive Blacklisting，利用网络之间被类似互联网来源攻击的相关性，预测攻击来自何处，未来可能功能哪一个网络。一个免费的<a href="http://www.dshield.org/hpbinfo.html">试验性版本</a>已经发布。
➜旧金山IT管理员交出劫持的网络管理密码
https://www.solidot.org/story?sid=7160	7800
旧金山市市长Gavin Newsom在周一会见了被拘禁的IT管理员 Terry Childs ，<a href="http://www.infoworld.com/article/08/07/23/San_Franciscos_mayor_gets_back_keys_to_the_network_1.html">说服他交出市政府使用的FiberWAN网络管理密码</a>。<i>
自从7月13日被捕后，Terry Childs<a href="__SLASHLINK__" sect="it" sid="08/07/16/1023208" sn="article" tid="100">拒绝交出</a>思科系统使用的管理密码。根据透过律师发表的声明，Newsom市长是“唯一一个让他觉得他可以信任的人”。Childs仍然被关押，保释金高达500万美元。整个案件似乎还是扑朔迷离。Childs试图反驳对他的控诉，同时曝光了他所在的通讯和信息服务部（DTIS）的管理不善，玩忽职守和腐败。他说，如果DTIS不受限制，将置旧金山市于危险境地。DTIS主管官员Ron Vinson否认该指控，称“在Childs心里，网络就是他的，其实不是，网络是纳税人的”。旧金山警察部门的调查人员发现，Childs使用了称为<a href="http://www.cisco.com/en/US/docs/ios/12_3/12_3y/12_3ya8/gtnsvpwd.html">No Service Password Recovery</a>的命令，重新配置了思科的网络设备，如果万一有人试图恢复管理权就将删除重要的配置数据。No Service Password Recovery本是提供给工程师使用作额外的网络安全保护。没有密码，网络也可以使用，但不可能再重新配置设备。修复的方法是整个网络下线和重新配置，但这需要数周乃至数月的时间。Newsom市长获得密码后，并没有第一时间通知DTIS。</i>从2000年开始，DTIS部门的350个职位被裁掉了200个，压力可能迫使Child采取极端行为。他的同事中也不乏支持者，“主管不理解我们所做的工作，不重视这项工作的复杂性”。
➜软件工程师不可不知的10个概念
https://www.solidot.org/story?sid=7161	11520
<a href="http://www.comsharp.com/">35公里</a> 写道 "<a href="http://www.readwriteweb.com/archives/top_10_software_engineer_traits.php">出色的软件工程师</a>善用设计模式，勤于代码重构，编写单元测试，并对简单有宗教般的追求。除了这些，<a href="http://www.readwriteweb.com/archives/top_10_concepts_that_every_software_engineer_should_know.php">优秀的软件工程师还要通晓10个概念</a>，这10个概念超越了编程语言与设计模式，软件工程师应当从更广的范围内明白这些道理（<a href="http://www.comsharp.com/GetKnowledge/zh-CN/TeamBlogTimothyPage_K436.aspx">全文阅读</a>）：            <div> <ol> <li>接口 （Interfaces ）</li> <li>惯例与模板 （Conventions and Templates）</li> <li>分层 （Layering ）</li> <li>算法的复杂性 （Algorithmic Complexity）</li> <li>散列法 （Hashing ）</li> <li>缓存 （Caching ）</li> <li>并发 （Concurrency ）</li> <li>云计算（Cloud Computing ）</li> <li>安全（Security ）</li> <li>关系数据库 （Relational Databases ）</li> </ol>  10. 关系数据库 (Relational Databases)<br> <br> <a href="http://en.wikipedia.org/wiki/Relational_database">关系数据库</a>因为在大规模 Web 服务上缺乏可扩充性而<a href="http://www.readwriteweb.com/archives/amazon_dynamo.php">颇受微词</a>，然而，关系数据库仍然是近20年来计算机技术中最伟大的成就。关系数据库对处理订单，公司数据方面有着出色的表现。 <br> <br>关系数据库的核心是以记录表示数据，记录存放在数据库表，数据库使用查询语言（SQL）对数据进行搜索与查询，同时，数据库对各个数据表进行关联。 <br> <br>数据库的标准化技术（normalization）讲的是使用正确的方式对数据进行分存以降低冗余，并加快存取速度。 <br> <br>&#160;9. 安全 （Security）<br> <br>随着黑客的崛起与数据敏感性的上升，<a href="http://en.wikipedia.org/wiki/Computer_security">安全</a>变得非常重要。安全是个广义的概念，涉及验证，授权与信息传输。 <br> <br>验证是对用户的身份进行检查，如要求用户输入密码。验证通常需要结合 SSL （secure socket layer）进行；授权在公司业务系统中非常重要，尤其是一些工作流系统。最近开发的 <a href="http://oauth.net/">OAuth</a> 协议可以帮助 Web 服务将相应信息向相应用户开放。Flickr 便使用这种方式管理私人照片和数据的访问权限。 <br> <br>另外一个安全领域是网络设防，这关系到操作系统，配置与监控。不仅网络危险重重，任何软件都是。Firefox 被称为最安全的浏览器，仍然需要频频发布安全补丁。要为你的系统编写安全代码就需要明白各种潜在的问题。 <br> <br>&#160;8. 云计算 （Cloud Computing）<br> <br>RWW 最近的关于云计算的文章 <a href="http://www.readwriteweb.com/archives/reaching_for_the_sky_through_compute_clouds.php">Reaching For The Sky Through Compute Clouds</a> 讲到了<a href="http://www.readwriteweb.com/archives/top_10_concepts_that_every_software_engineer_should_know.php">云计算</a>如何改变大规模 Web 应用的发布。大规模的并行，低成本，与快速投入市场。 <br> <br>并行算法发明以来，首先迎来的是网格计算，网格计算是借助空闲的桌面计算机资源进行并行计算。最著名的例子是 Berkley 大学的 SETI@home 计划，该计划使用空闲的 CPU 资源分析太空数据。金融机构也大规模实施网格计算进行风险分析。空闲的资源，加上 J2EE 平台的崛起，迎来了云计算的概念：应用服务虚拟化。就是应用按需运行，并可以随着时间和用户规模而实时改变。 <br> <br>云计算最生动的例子是 Amazon 的 Web 服务，一组可以通过 API 进行调用的应用，如云服务（EC2），一个用来存储大型媒体文件的数据库（S3），索引服务（SimpleDB），序列服务（SQS）。 <br> <br>&#160;7. 并发 （Concurrency）<br> <br> <a href="http://oreilly.com/catalog/9780596007829/"> </a> <a href="http://en.wikipedia.org/wiki/Concurrency_(computer_science)">并发</a>是软件工程师最容易犯错的地方，这可以理解，因为我们一直遵从线形思维，然而并发在现代系统中非常重要。 <br> <br>并发是程序中的并行处理，多数现代编程语言包含内置的并发能力，在 Java，指的是线程。关于并发，最经典的例子是“生产/消费”模式，生产方生产数据和任务，并放入工作线程消费或执行。并发的复杂性在于，线程需要经常访问共同数据，每个线程都有自己的执行顺序，但需要访问共同数据。<a href="http://g.oswego.edu/">Doug Lea</a> 曾写过一个最复杂的并发类，现在是 <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/package-summary.html">core Java</a> 的一部分。<br> <br>6. 缓存（Caching）<br> <br>缓存对现代 Web 程序不可或缺，缓存是从数据库取回，并存放在内存中的数据。因为数据库直接存取的代价非常高，将数据从数据库取回并放在缓存中访问就变得十分必要。比如，你有一个网站，要显示上周的畅销书，你可以从数据将畅销书榜一次性取回放在缓存中，而不必在每次访问时都去数据库读数据。 <br> <br>缓存需要代价，只有最常用的内容才可以放入缓存。很多现代程序，包括 Facebook，依靠一种叫做 <a href="http://en.wikipedia.org/wiki/Memcached">Memcached</a> 的分布式缓存系统，该系统是 <a href="http://bradfitz.com/">Brad Firzpatrick</a> 在工作于 LiveJournal 项目时开发的，Memcached 使用网络中空闲的内存资源建立缓存机制，Memcached 类库在很多流行编程语言，包括 Java 和 PHP 中都有。 <br> <br> <strong>5. 散列法（Hashing）</strong>  <br> <br> <a href="http://en.wikipedia.org/wiki/Hash_function">Hashing</a> 的目的是加速访问速度。如果数据是序列存储的，从中查询一个项的时间取决于数据列的大小。而散列法对每一个项计算一个数字作为索引，在一个好的 Hashing 算法下，数据查找的速度是一样的。 <br> <br>除了存储数据，散列法对分布式系统也很重要。统一散列法（uniform hash ）用来在云数据库环境下，在不同计算机之间分存数据。Google 的索引服务就是这种方法的体现，每一个 URL 都被散列分布到特定计算机。 <br> <br>散列函数非常复杂，但现代类库中都有现成的类，重要的是，如何对散列法进行细调以获得最好的性能。<br> <br>4. 算法的复杂性 （Algorithmic Complexity）<br> <br> <a href="http://www.amazon.com/Structures-Algorithms-Addison-Wesley-Computer-Information/dp/0201000237"> </a>关于算法的复杂性，软件工程师需要理解这样几件事。第一，<a href="http://en.wikipedia.org/wiki/Big_O_notation">大O标记法（big O notation）</a>；第二，你永远都不应该使用嵌套式循环（循环里面套循环），你应该使用 Hash 表，数组或单一循环；第三，如今优秀类库比比皆是，我们不必过分纠缠于这些库的效能的差别，我们以后还有机会进行细调；最后，不要忽视算法的优雅及性能，编写紧凑的，可读的代码可以让你的算法更简单，更干净。 <br> <br>&#160;3. 分层 （Layering）<br> <br>用分层来讨论软件架构是最容易的。John Lakos 曾出版过一本关于<a href="http://simplewebs.com/?LargeScaleCppSoftwareDesign">大型 C++ 系统的书</a>。Lakos 认为软件包含了层，书中介绍了层的概念，方法是，对每个软件组件，数一下它所依赖的组件数目就可以知道它的复杂程度。 <br> <br>Lakos 认为，一个好的软件拥有金字塔结构，就是说，软件组件拥有层层积累的复杂度，但每个组件本身必须简单，一个优秀的软件包含很多小的，可重复使用的模块，每个模块有自己的职责。一个好的系统中，组件之间的依赖性不可交叉，整个系统是各种各样的组件堆积起来，形成一个金字塔。 <br> <br>Lakos 在软件工程的很多方面都是先驱，最著名的是 <a href="http://www.refactoring.com/">Refactoring</a> （代码重构）。代码重构指的是，在编程过程中需要不断地对代码进行改造以保证其结构的健壮与灵活。 <br> <br>&#160;2. 惯例与模板 （Conventions and Templates）<br> <br>命名惯例和基础模板在编程模式中常被忽视，然而它可能是最强大的方法。命名惯例使软件自动化成为可能，如，Java Beans 框架在 getter 和 setter 方法中，使用简单的命名惯例。del.icio.us 网站的 URL 命名也使用统一的格式，如 <a href="http://del.icio.us/tag/software">http://del.icio.us/tag/software</a> 会将用户带到所有标签为 software 的页。 <br> <br>很多社会网络均使用简单命名，如，你的名字是 <em>johnsmith</em> ，那你的头像可能命名为 <em>johnsmith</em>.jpg，而你的 rss 聚合文件的命名很可能是 <em>johnsmith.xml 。</em>  <br> <br>命名惯例还用于单元测试，如，JUnit 单元测试工具会辨认所有以 test 开头的类。 <br> <br>我们这里说的模板（templates ）指的并不是  C++ 或 Java 语言中的 constructs，我们说的是一些包含变量的模板文件，用户可以替换变量并输出最终结果。 <br> <br>Cold Fusion 是最先使用模板的程序之一，后来，Java 使用 JSP 实现模板功能。Apache 近来为 Java 开发了非常好用的通用模板, Velocity。PHP 本身就是基于模板的，因为它支持 eval 函数。<br> <br>1. 接口（Interfaces）<br> <br>软件工程中最重要的概念是界面。任何软件都是一个真实系统的模型。如何使用简单的用户界面进行模型化至关重要。很多软件系统走这样的极端，缺乏抽象的冗长代码，或者过分设计而导致无谓的复杂。 <br> <br>在众多软件工程书籍中，Robert Martin 写的《敏捷编程》值得一读。 <br> <br>关于模型化，以下方法对你会有帮助。首先，去掉那些只有在将来才可能用得着的方法，代码越精练越好。第二，不要总认为以前的东西是对的，要善于改变。第三，要有耐心并享受过程。</div>
➜DNS漏洞攻击代码发布
https://www.solidot.org/story?sid=7162	16200
从理论走向实践无需多长的时间。<a href="http://blogs.zdnet.com/security/?p=1545">ZDNet报道</a>，著名黑客兼Metasploit创始人<a href="http://en.wikipedia.org/wiki/H._D._Moore">HD Moore</a>发布了Dan Kaminsky年初发现的DNS缓存中毒漏洞的<a href="http://www.caughq.org/exploits/CAU-EX-2008-0002.txt">攻击代码</a>。利用该漏洞，攻击者能在目标域名服务器缓存内植入一恶意DNS记录。DNS服务器会在本地缓存从其他DNS服务器所接收到的响应。DNS缓存中毒攻击指的是更改了DNS服务器的DNS缓存中某项，这样缓存中与主机名相关的IP地址就不再指向正确的位置。通过漏洞，黑客可以让DNS服务器接受到一个欺骗性响应，包括回复查询，已验证服务器记录和额外的服务器记录。
➜Intel的Mobile Linux用Fedora代替Ubuntu
https://www.solidot.org/story?sid=7163	22320
芯片制造商Intel计划在它第二版本的<a href="http://www.moblin.org/">Moblin</a>（移动和互联网Linux项目）平台上<a href="http://www.heise-online.co.uk/open/Intel-switches-from-Ubuntu-to-Fedora-for-Mobile-Linux--/news/111166">使用Fedora发行版</a>，代替第一版使用的Ubuntu发行版。Intel是在O'Reilly开源大会（<a href="http://en.oreilly.com/oscon2008/">OSCON</a>）上宣布了这一声明。Intel喜欢使用RPM包管理器的发行版，因为它包含了许可证信息，而Ubuntu和Debian使用的DEB包管理器没有在包文件内包含此类信息。
➜三维火星北极地形图
https://www.solidot.org/story?sid=7165	23700
如果你有3D眼镜，现在可以拿出来用它从新的角度去观看火星表面。凤凰号火星着陆器拍摄下火星北极冻原的<a href="http://www.universetoday.com/2008/07/18/mars-arctic-in-3d-from-phoenix/">立体图像</a>。立体质感的画面让你从前所未有的角度去观察火星表面地形。更多图像可以从<a href="http://www1.nasa.gov/mission_pages/phoenix/images/index.html">Phoenix Image Gallery</a>找到。
➜openSUSE 11.1 Alpha 1 发布
https://www.solidot.org/story?sid=7164	26400
<a href="http://www.ownlinux.cn/">OwnLinux.cn</a> 写道 "<a href="http://www.opensuse.org/">openSUSE</a>下一个版本—— openSUSE 11.1 的开发工作已经在上个月启动，<a href="http://www.ownlinux.cn/2008/07/25/opensuse-111-alpha-1-released/">现在 openSUSE 11.1 的第一个Alpha 版本已经释出</a>。虽然 openSUSE 官方现在并没有正式公布 openSUSE 11.1 Alpha 1 发布的相关信息，不过在 openSUSE 的FTP里已经出现了openSUSE 11.1 Alpha 1 的镜像文件。 据 openSUSE 官方发布的资料显示，openSUSE 11.1 的 GNOME 版本将采用 GNOME 2.24 ，而 openSUSE 11.1 的 KDE 版本将会搭载 KDE 4.1.1（也可选KDE 3.5.10 ）。内核将采用 Linux kernel 2.6.27 或者是更新的内核版本。 openSUSE 11.1 将在 2008年12月8日正式公开发布，也就是在 openSUSE 11.0 释出半年后发布。"
➜sourceforge.net解封
https://www.solidot.org/story?sid=7167	26700
<a href="http://solidot.org/~bennycompile/">bennycompile</a>在日志上提到<a href="http://solidot.org/~bennycompile/journal/586">sourceforge.net解封</a>了。一个月前，很多人报道世界上最大的开源源码储存网站SF.NET<a href="__SLASHLINK__" sect="software" sid="08/06/27/003242" sn="article" tid="15">无法访问</a>。没有任何清晰的信息指出原因，因此有人推测是因为其中的一款开源软件<a href="http://sourceforge.net/projects/notepad-plus/">Notepad++</a>作者宣布<a href="http://sourceforge.net/forum/forum.php?forum_id=813349">抵制奥运</a>引起的，但现在Notepad++的页面并没有受到类似Youtube那样的特别关照。
➜瑞星很可爱
https://www.solidot.org/story?sid=7166	27000
docong 写道 "去年电脑中一个木马，卡巴查出来之后老是杀不掉，就换用瑞星了，当时瑞星2008版测试，免费当了小白鼠。
使用3个月后2008成了正式版的了，然后可以给3个月的免费试用，等3个月没到，广州遇到雪灾了，然后瑞星以此为“借口”有要免费几个月，雪灾的免费期还没用完，四川有地震了，瑞星又要免费几个月，地震到免费期才刚用2个月，瑞星昨天为了“跨过伪军打鬼子”一下子又要免费一年<a href="http://it.rising.com.cn/new2008/News/NewsInfo/2008-07-24/1216882672d48616.shtml">瑞星声明</a>。我的亲娘啊，我真的有点感动哦！
说说对瑞星的评价吧，我的机器（T2330，2G RAM）跑瑞星不卡，你会说跑着会卡的是病毒，那不是杀毒软件，但是卡巴很多时候真的比病毒更卡。安了瑞星之后，体验还是可以，它的防火墙也还是比以前更好了，不会动不动问用户，而是自己判断一下程序是不是能通过验证。但是杀木马，感觉还是360比较靠谱。
瑞星这么厚道，我觉得还是该写几句，有点感动。"
➜匹兹堡癌症研究院警告手机有致癌风险
https://www.solidot.org/story?sid=7168	28200
周三，世界著名癌症研究机构的首脑在所有职员面前<a href="http://ap.google.com/article/ALeqM5hwzQ6Jsq3cSWa721yR84l99_pnlAD923S7T82">发出前所未有的警告</a>，要求他们<a href="http://www.environmentaloncology.org/node/201">限制手机使用</a>，因为可能会有癌症的风险。匹兹堡大学癌症研究院主任<a href="http://www.upmccancercenters.com/about/bio-herberman.html">Ronald B. Herberman</a>博士的警告是基于未公开的早期研究结果，以前的相关研究没有找到两者之间的关联。Herberman建议尽可能使用扬声器或无线耳筒。他甚至还反对在公共场所如公共汽车上打电话，因为这会让其他人暴露在电磁场中。
➜垃圾邮件之王越狱，后发现与妻女一起自杀
https://www.solidot.org/story?sid=7169	31800
Edward“Eddie”Davidson，臭名昭著的垃圾邮件之王，今年4月被宣判入狱21个月，他在一所安全等级最低的联邦监狱内服役。上周日他乘妻子探访时，跳进了妻子的汽车，并迫使她驾车回家，更换衣服后逃之夭夭。FBI，美国国税局（Davidson需要向其支付$714,139罚款）和洛矶山当地警方正全力搜索这位<a href="http://blogs.zdnet.com/security/?p=1543">越狱的垃圾邮件之王</a>。周四，该案件突然峰回路转。位于科罗拉多州的<a href="http://www.9news.com/news/article.aspx?storyid=96383&amp;catid=339">9News.com</a>报道，上午11:15，Arapahoe县的司法部收到报告称听到了几声枪响，随后警方证实Davidson已经死亡，显然是自杀，在自杀之前他先杀死了妻子和3岁的女儿，邻居家中的一位少女脖子上意外受到了枪伤，另一位7、8个月大的呆在SUV后座上的婴儿没有发现有丝毫伤害。
➜科学家研究星际间互联网协议
https://www.solidot.org/story?sid=7170	51000
TCP/IP之父、现在的Google副总裁<a href="http://en.wikipedia.org/wiki/Vinton_Cerf">Vint Cerf</a>与NASA的同僚一起合作多年，<a href="http://www.internetevolution.com/author.asp?section_id=562&amp;doc_id=159862&amp;">试图将互联网连到太空</a>。如果成功的话，执行火星或其它遥远位置任务的宇航员可以与世界各地的研究人员保持联系（同时维护一个Twitter连接，显然这是一个独立于Google的研究）。<i>将互联网延伸到太空面临着许多挑战，如距离，流星之类难以忽视的阻碍，重量（高功率的天线太重而很难一次性发射到太空），需要特殊的设备能进行远程（真的非常远）修复或具有自我愈合能力。Cerf和研究人员努力解决各个难题，从可调整的基于人造卫星的IP，到研究可容忍延迟网络（delay-tolerant networking ，简写DTN），到太空环境IP的局限性。 The Mitre公司的首席工程师 Keith Scott称，“宇宙飞船可当作路由器操作，接收外部来源的数据，自动响应和转发。”....“2010年的目标是设计让DTN达到成熟的阶段，并被整合进机器人和人类的月球探索任务中。”NASA和洛克希德马丁公司都对此颇感兴趣。</i>