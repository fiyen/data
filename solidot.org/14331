➜测试Ubuntu 9.04 Beta
https://www.solidot.org/story?sid=10508	120
<a href="http://www.ownlinux.cn/">OwnLinux.cn</a> 写道 "<a href="http://www.ownlinux.cn/2009/03/27/ubuntu-904-beta-%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83/">Ubuntu 9.04(Jaunty Jackalope) 的Beta版本今晨正式释出</a>，Felix用自家小水管全速放水9个小时终于拿到了DVD的光盘映像文件。这次的DVD文件被官方命名为“live DVD”，有着4.23G的肥大体型。它究竟带来了哪些变化？<a href="http://www.ownlinux.cn/2009/03/27/evaluate-ubuntu-904-beta/">它将是又一个8.04的辉煌，还是和8.10一样没有带来足够的惊喜？让我们拭目以待</a>。"
➜烫茶会增加罹患食道癌的风险
https://www.solidot.org/story?sid=10509	1500
根据发表在《英国医学杂志》上的一项<a href="http://www.bmj.com/cgi/content/abstract/338/mar26_2/b929">研究报告</a>(开放获取)，伊朗科学家发现，<a href="http://news.bbc.co.uk/chinese/simp/hi/newsid_7960000/newsid_7967300/7967328.stm">饮滚烫的茶水将增加罹患食道癌的危险性</a>。<i>
伊朗格列斯坦省的居民虽然抽烟喝酒的比例并不高，但患食道癌的比例却位居全球第一，而饮茶是当地流行的民俗。德黑兰大学的研究人员对格列斯坦省300名食道癌患者和同一地区其他570人进行了对比和研究后发现，几乎所有人都经常饮用红茶，平均每人每天饮用一公升。研究结果表明，和饮用较热茶或温茶（65度或以下）的人相比，引用热茶（65-69度）的人患食道癌的危险性高出两倍。而饮用滚烫茶水（70度或更高）的人患食道癌的危险性则高出8倍。饮茶的速度也同样重要，在茶沏开两分钟之内就开始饮用的人患食道癌的危险性是等茶沏开后4分钟或更久才喝的人的5倍。澳大利亚昆士兰大学的怀特曼博士建议饮茶者耐心等待几分钟，让茶水从滚烫降温后再饮用。</i>
➜研究人员称能识别匿名的Twitter用户
https://www.solidot.org/story?sid=10510	2700
德克萨斯大学奥斯汀分校研究人员的研究显示，他们能靠标出社交网络如Twitter和Flickr上朋友之间联络图，去<a href="http://www.itworld.com/security/65168/researchers-can-id-anonymous-twitterers">识别出用户的身份</a>，研究<a href="http://33bits.org/2009/03/19/de-anonymizing-social-networks/">报告</a>将在即将举行的一个安全会议上讨论。这项技术虽然不是100%有效，但可能会让用户担忧他们匿名形式的数据。<i>
网站运营商通常会在匿名化用户个人信息如姓名、地址或出生日期之后，与合作伙伴和广告商共享数据。研究员Arvind Narayanan和Vitaly Shmatikov发现，通过分析匿名化的数据集，他们能依靠手中的信息识别出在Twitter出没的Flickr用户。Narayanan说，很多时候人们在共享信息时会以为他们是匿名的，但是如果他们的身份在一个社交网络中认出，那么在其它社交网站中也能很容易识别出来，至少能做出 “强有力的猜测”。他们的研究并不是着眼一个人的朋友圈，而是分析所有朋友在社交网络中的联系模式。参与的社交网络越多，就越容易识别。</i>
➜微软新广告“我就是买不起Macbook”
https://www.solidot.org/story?sid=10511	8700
cuthead 写道 <i>"对于美国的篮球迷来说，三月绝对算得上“疯狂”，因为传统的<a href="http://en.wikipedia.org/wiki/NCAA_March_Madness">NCAA March Madness</a>淘汰赛已经展开。微软适时也过来凑热闹放出一个<a href="http://www.microsoft.com/windows/watchtheads/video/lauren/default.aspx">新的一分钟广告</a>(现在访问 windows.com 你将能看到这则广告)。广告中一个叫Lauren的MM想要买一台1000美元以下的的大屏幕手感好笔记本(这可能是绝大部分人想要的笔记本)，她先去了苹果专卖店，她唯一能找到的只有<a href="http://www.apple.com.cn/macbook/white/">Mac小白</a>。离开苹果专卖店她幽怨的哀叹了一句，<a href="http://blogs.zdnet.com/microsoft/?p=2384">Macbook太贵了</a>。随即她进入一电脑城，一番挑挑拣拣后，找到了她的所爱，hp最新主打机型<a href="http://www.shopping.hp.com/series/category/notebooks/dv5tse_series/3/computer_store">Pavilion dv5t</a>。这则广告深刻的阐述了一个哲理，美国也有穷人！"</i>
➜研究暗示河蟹能感受到疼痛
https://www.solidot.org/story?sid=10512	10440
一项新的科学研究暗示<a href="http://www.cnn.com/2009/WORLD/europe/03/27/crabs.memorypain/index.html?eref=rss_latest">河蟹能感受并记得疼痛</a>。<a href="http://www.qub.ac.uk/home/TheUniversity/GeneralServices/News/PressReleases/Title,141245,en.html">研究</a>发表在《<a href="http://www.sciencedirect.com/science/journal/00033472">动物行为</a>》杂志上。<i>
贝尔法斯特女王大学生物科学学院教授Bob Elwood和Mirjam Appel研究了寄居蟹(hermit crab)对低强度电击的反应。Elwood教授之前的研究显示了对虾能忍受痛，他表示需要关注食品行业中甲壳类动物的处理问题，他说“这个领域需要更多研究，因为有许多潜在的大问题可能被忽视了，”科学家提议立法保护甲壳类动物如河蟹，当然这只是出于科学研究考量。食品行业饲养或捕捉了数以百万计的甲壳类动物，与哺乳类动物相比，甲壳类动物没有受到任何保护（或许澳大利亚某些地方除外，但中国肯定没有，甚至中国的哺乳类动物也没有任何保护），因为人们以为它们体验不到痛苦。也许未来的研究还会发现植物蔬菜都能感受到疼痛，所以所有素食者只能去喝西北风。</i>
➜海盗湾提供每月45元的VPN服务
https://www.solidot.org/story?sid=10513	12300
海盗湾宣布将推出<a href="http://arstechnica.com/telecom/news/2009/03/the-pirate-bay-to-roll-out-secure-vpn-service.ars">付费虚拟专用网络（VPN）服务</a>，以帮助保护用户的隐私。<i>
新服务名叫<a href="http://ipredator.se/">IPREDator</a>，以瑞典知识产权强制指令（Swedish Intellectual Property Rights Enforcement Directive，IPRED）的名字命名，将在4月正式推出，目前处于封闭内测中，预计将在下周以每月5欧元（约45元人民币）的费用向公众提供服务。今年1月瑞典警方表示要获得涉嫌侵犯版权的P2P用户的个人信息，版权持有者可以对个人提起上诉。而海盗湾的IPREDator就是对此的回应。IPREDator网站称，它会储存任何个人的通信数据，目的是帮助用户在网络中隐身。目前的问题是这个价格过高了，而多数人其实并不在意匿名。</i>
➜Unladen Swallow项目计划：提高Python速度5倍
https://www.solidot.org/story?sid=10514	14400
<a href="http://danmarner.yo2.cn/">DaNmarner</a> 写道 "Google的Python工程师发布了一个新项目，目的是让Python的速度提高至少5倍。新项目名叫<a href="http://arstechnica.com/open-source/news/2009/03/google-launches-project-to-boost-python-performance-by-5x.ars">Unladen Swallow</a>，意图寻找新的Python解释程序虚拟机，新的JIT编译引擎。第一季度的目标是实现25-35%的性能提升，目前已经完成，代码发布在Google Code 网站上。
更多内容和介绍见内           目标
<br> <br>我们要让Python变的更快，同时我们也希望让大型的，完好的现存应用无痛苦的转而使用Unladen Swallow项目。
<ol>
<li>创建一个比CPython速度至少快5倍的新Python版本。</li>
<li>Python应用的表现应该非常稳定。</li>
<li>维持与CPython应用程序在源代码级别的兼容。</li>
<li>维持于CPython扩展模块在源代码级别的兼容。</li>
<li>我们并不是要维护一个长期的Python实现；我们把这个项目当作一个开发分支(branch)，而不是一个版本分支(fork)。</li>
</ol>
项目概括
<br> <br>为了实现我们对于性能和兼容性的目标，我们选择对CPython进行修改，而不是从零开始开发这个实现。值得强调的是，我们选择从CPython 2.6.1着手：Python 2.6与2.4/2.5（当前为大多数有价值的应用使用）和Python 3.0(未来的终极版本)都有可以很好的共存。从一个CPython的版本着手可以是我们避免重新实现大量的内置函数，对象和标准库的模块，同时让我们重用一些现存且常用的CPython的C语言扩展API。从一个2.x CPthon可以让我们更轻松的迁移现存的应用程序；假设我们从3.x开始，并且要求大型应用程序的维护者们率先迁移他们的程序，那对我们项目的受众来说是不切实际的。
<br> <br>我们的主要工作是集中力量提高Python代码的执行速度，而不会在Python的运行时库上过多的努力。我们的长期计划是是使用一个创建在LLVM基础上的JIT来代替CPython传统的虚拟机，同时尽量少的影响Python的运行模式的其他部分。通过观察，我们发现Python的应用程序把大量的运行时间花费在了主eval循环。尤其是，即对例如操作码调度(opcode dispatch)这样虚拟机部件的微小调整也能对Python的运行性能产生重大影响。我们相信通过LLVM的JIT引擎把Python代码编译为机器码将会带来更多的益处。
<br> <br>一些显著的好处：
<ul>
<li>转向JIT能让我们把Python从基于堆栈的机(stack-based machine)转为一个基于寄存器的机(register machine)，实践证明这种转变提升了另一个类似语言的性能。</li>
<li>其他的先不提，单是消除对收发操作码(opcodes)的需要本身已经是一项胜利。请参考<a href="http://bugs.python.org/issue4753">http://bugs.python.org/issue4753</a>上一个当前CPython对操作码发送变化的敏感性的讨论。</li>
<li>目前的CPython虚拟机操作码接受/发送限制使进进一步的性能优化变得几乎不可能。举例来说，我们想实现数据类型回馈(type feedback)和动态的重新编译(dynamic recompilation ala SELF-93)，但是我们认为用CPython编译的二进制代码来实现多态性内联高速缓存（polymorphic inline caches)将是无法接受的慢。</li>
<li> LLVM尤为值得注意。那是因为它为多个平台生成代码功能(codegen)的易用性，和它具有把C和C++编译为同种中间代码——这正是我们想要带给Python的。它能够让内联和交错解析(inlining and analysis)成为可能，消除这个当前Python和C之间的障碍。</li>
</ul>
有了产生机器码的框架，我们就可以把Python编译为更加高效的实现。以以下这段代码为例：
<blockquote>
<div> for i in range(3):
<br> <br>&nbsp;&nbsp;&nbsp;&nbsp;  foo(i)</div>
</blockquote>
目前它将被低效的翻译成这样
<blockquote>
<div> $x = range(3)
<br> <br>while True:
<br> <br>&nbsp;&nbsp;&nbsp;&nbsp;  try:
<br> <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    i = $x.next()
<br> <br>&nbsp;&nbsp;&nbsp;&nbsp;  except StopIteration:
<br> <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    break
<br> <br>&nbsp;&nbsp;&nbsp;&nbsp;  foo(i)</div>
</blockquote>
一旦我们有了知道range()代表range()内置函数的办法，我们可以把它变为类似这样
<blockquote>
<div> for (i = 0; i &lt; 3; i++)
<br> <br>&nbsp;&nbsp;&nbsp;&nbsp;  foo(i)</div>
</blockquote>
在C语言里，使用unboxed数据类型进行数学运算，可以把这个循环展开为
<blockquote>
<div> foo(0)
<br> <br>foo(1)
<br> <br>foo(2)</div>
</blockquote>
我们有意将Unladen Swallow的内部结构设计为支持多内核。服务器将来只会有越来越多的内核，我们要发掘这一点，从而可以在并行结构中完成更多的工作。例如，我们可以用一个内核作为并行优化器，它能在代码运行的时候进行日益昂贵（重要）的代码优化，用另一个内核来执行代码本身。我们也在考虑实现一个并行的<a href="http://code.google.com/p/unladen-swallow/wiki/GarbageCollector">GC</a>，利用另一个内核来释放内存模块。由于大多数工业级的服务器都具有4到32个内核，我们相信这项优化的收益是一笔潜在的财富。然而，我们还是要关注高度并行的应用程序的需要，而不能盲目的消耗掉这些内核。
<br> <br>强调一下，这里的很多领域已经被其他的一些动态语言考虑或者实现过了，例如<a href="http://jruby.codehaus.org/">jRuby</a>，<a href="http://rubini.us/">Rubinius</a>和<a href="http://www.parrot.org/">Parrot</a>, 更包括像<a href="http://www.jython.org/Project/">Jython</a>，<a href="http://codespeak.net/pypy/dist/pypy/doc/">PyPy</a>和<a href="http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython">IronPython</a>这些其他的Python实现。我们正在从这些其他实现里寻找有关调试信息，正则性能以及其他提高动态语言性能的点子。这是一条已经被很多人走过的路，我们需要尽量避免重新发明轮子的困境。
计划蓝图
<br> <br>Unladen Swallow 将会每3个月发行一个新版本，发行期间进行bug修复。
<br> <br> <strong> 2009 </strong> <strong>第一阶段</strong> <strong>(Q1)</strong>
<br> <br>Q1主要用来对显存的CPython实现进行相对小的修改。我们的目标是在目前的基线上实现25-35%的性能提升。这个阶段的目标是相对保守的，我们想尽可能快的给客户应用程序一些看得见的性能优化，而不是要他们等到整个项目完成。
<br> <br> <strong>2009 </strong> <strong>第二阶段</strong> <strong>(Q2)</strong>
<br> <br>Q2会集中力量来废除Python的虚拟机，并用一个具有相同功能的基于LLVM的实现将其代替。我们预期将会有一些性能提升，不过那不是2009Q2的主要任务。我们主要是要得到一个建立在LLVM之上的可以运行的东西。给它提速是本阶段之后的人物。<br>
<br> <br> <strong>2009 </strong> <strong>第三阶段(Q3)以及将来</strong>
<br> <br>从Q3开始的任务将是“简单的“做好这些作业。我们不渴望做原创工作，而是尽可能的利用近30年来的研究成果。请移步相关论文来浏览我们打算实现内容的论文清单的一部分（远不及全部）。<br>
我们计划强调对正则引擎何其他被确定为性能瓶颈的扩展模块的考虑。然而，正则表达式已经被确定为一个很好的目标并且会是我们考虑第一个进行优化的领域。<br>
另外，我们打算去除Python的GIL和多线程的状态。我们相信通过实现一个更高级的GC，这一点是可以实现的，类似IBM的Recycler。<br>
我们的长期目标是让Python的速度快到可以从把那些为了速度而使用C实现的类型重新用Python取代。<br>
2009Q3准确的性能优化目标会在Q2的期间确定。
原文链接:  <a href="http://code.google.com/p/unladen-swallow/wiki/ProjectPlan">http://code.google.com/p/unladen-swallow/wiki/Proj ectPlan</a>
<br> <br>译文链接：<a href="http://danmarner.yo2.cn/unladen-swallow-project-plan"> </a> <a href="http://danmarner.yo2.cn/unladen-swallow-project-plan">http://danmarner.yo2.cn/unladen-swallow-project-pl an</a>
<br> <br>原著： Google  译者： DaNmarner
<br> <br>欢迎转载，请保留原/译文链接。
<br> <br>=========================
<br> <br>
Unladen Swallow项目计划——优化Python计划<br>
注：所有引用资料的链接见<a href="http://code.google.com/p/unladen-swallow/wiki/RelevantPapers">相关论文</a>。
➜巨大的超新星让科学家困惑
https://www.solidot.org/story?sid=10515	19500
以色列魏茨曼科学研究所和加州圣迭戈的科学家观察到了<a href="http://science.slashdot.org/article.pl?sid=09/03/26/2331222&amp;art_pos=8">一颗比太阳大50倍的恒星的爆炸</a>。它是至今观察到的最大的超新星爆发。<i>
这颗恒星距离地球2亿光年，比太阳亮百万倍，但令科学家迷惑的是它的爆发比理论预测早的多。根据现有理论：和太阳差不多的恒星在生命末期，燃耗耗尽后形成红巨星，质量大于太阳9倍的恒星会在引力坍缩下形成<a href="http://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%B0%E6%98%9F">超新星</a>。使用夏威夷的<a href="http://www.keckobservatory.org/">Keck望远镜</a>，科学家发现了一颗接近爆发的超新星，质量是太阳的50到100倍。超新星爆发中，一小部分物质被抛出，大部分物质坍塌到核心，最后以形成黑洞而结束。这颗不成熟的恒星爆发动摇了现有的恒星演化理论，魏茨曼科学研究所的Avishay Gal-Yam博士称超大质量恒星的演化理论存在基本错误。</i>
➜长的URL会浪费带宽？
https://www.solidot.org/story?sid=10516	24300
受欢迎的网站如Facebook，由于采用了过分长的URL地址，而<a href="http://www.o3magazine.com/4/a/0/1.html">导致每秒浪费75MBit带宽</a>，如果Facebook的URL路径长度缩短几个字符，那么就会对服务器供应商<a href="http://tech.slashdot.org/article.pl?sid=09/03/27/2017250&amp;art_pos=7">产生重大影响</a>。
<i>
O3 Magazine指出有许多方法可以改善互联网的拥挤情况和带宽占用，但有一种方法常为人所忽视，那就是URL的长度。O3 Magazine使用Compete.com的统计数据，分别计算了Techcrunch和Facebook的带宽耗用情况，以下以Facebook为例：Facebook主页URL为100+个字符，页面上大约有150个源文件引用，为避免争论四舍五入简化到100个完整URL请求。假设每个URL浪费了80个字符，那么每次请求就浪费12000字符上行带宽和20000字符下行带宽。根据统计Facebook每个月有1,273,004,274次访问，差不多每天有41,064,654次请求，相当于每天浪费783GB下行带宽和469GB上行带宽，进一步精确计算就是浪费74Mbit/sec下行带宽和44MBit/sec上行带宽。</i>
使用TinyURL并没有用，因为它最终还是要转化到长URL。
➜3D化CAPTCHA成为现实
https://www.solidot.org/story?sid=10517	28080
使用3D物体的CAPTCHA（全自动区分计算机和人类的图灵测试）<a href="http://news.cnet.com/8301-17938_105-10204300-1.html">验证系统已经变成了现实</a>。由博客<a href="http://taylorhayward.posterous.com/3d-images-as-a-captcha">Taylor Hayward</a>提出的设想现在在社交网站<a href="http://www.zhs.yuniti.com/register.php">YUNiTi.com</a>开发者手上实现了。<i>
与Hayward的设想相似，新技术用3D物体代替了字母数字式字符，因为人类比较善于识别3D物体，而机器识别的难度很大。YUNiti的3D Captcha比较简单，它从现有的3D图像中挑选出3个供注册用户选择，3个物体的位置与列出的图像可能有所不同，所以第一次可能会让用户感到些困惑，但第二次的话就非常简单了。因此这些技术对<a href="__SLASHLINK__" sect="internet" sid="08/09/01/0556244" sn="article" tid="100">人工CAPTCHA</a>没有多大挑战性。</i>
➜Geek设计师们疯狂的桌面
https://www.solidot.org/story?sid=10518	35400
<a href="http://www.comsharp.com/">COMSHARP CMS</a> 写道 "设计师们每天有大部分时间待在办公室，他们的工作台对设计<a href="http://www.ahoys.com/blog/the-10-most-unusual-places-to-set-up-your-office">灵感</a>至关重要，然而很少有人在这上面做足文章，本文搜集了7个超 Cool 的设计师的工作台，他们的桌椅，摆设，以及上面的电脑系统与设计工具无不让人赞叹，从事创意设计的人多少有点疯狂，从他们的桌面就看得出(<a href="http://www.comsharp.com/GetKnowledge/zh-CN/TeamBlogTimothyPage_K762.aspx">完整图文版</a>)。"           Danny Choo: 疯狂的 Mac
<br> <br>如果有一个苹果天堂，它的样子会大抵<a href="http://www.dannychoo.com/adp/eng/1677/Mac+Life+4.html">如此</a>，除了那些塑胶娃娃。这个台面包含了所有最新的苹果装备，包括2台 iMac，2台 MacBook Pro，Power mac G5，1台 Mac Mini 以及 1台 iPod Touch 用作台钟。
<br> <br>借助 Teleport，这个桌面的主人只需一只鼠标和键盘就可控制所有设备，当光标移离最右边的屏幕，会自动返回最左边的屏幕，所有的 Mac 机都可以同步使用，文件可以在不同机器之间直接拖放。<br> <br>
图形图像师的梦幻桌面
<br> <br> <a href="http://www.flickr.com/photos/markjsebastian/2303393275/">这个桌面</a>很小，但很完美。从结实的工业级办公桌，到华丽的蓝色主题。苹果的 Mac Pro，MacBook Pro 以 Firewire 800 互联，并将一台 24" DELL Ultrasharp 宽屏显示器无缝连接。
<br> <br>Wacom 绘画板以及 APC 备用电源让办公桌更加平衡，不过这个桌面的主人似乎对 Jackie Martinez 有着不太健康的着迷。<br> <br>
Stefan Didak 的 Geek 盛宴
<br> <br>德国著名软件设计师，Stefan Didak，将显示器用到极致。他的<a href="http://www.flickr.com/photos/didak/2974539873/">桌面</a>上放了12台显示器，章鱼也用不了那么多。6台24"的大家伙放在面前，周边还有3台17" 的现代，1台19"的惠普，加几台笔记本，他的电费帐单一定够他受的。
<br> <br>他的办公室还配备了很棒的音响系统，Behringer Eurotrack Pro RX 16 通道混音器，Behringer Miniamp Amp800 放大器，头戴式耳机放大器，这些设备发出的声音一定了得，因此墙上配备了泡沫吸音板。<br> <br>
唯美主义者
、
<br> <br>这个<a href="http://www.flickr.com/photos/kihlbom/321207102/">桌面</a>设计遵从少即是美，刚好容纳他上面的苹果设备。这个办公室很明亮，天花板上巨大的天窗将自然光引入。3个显示器端坐在宽敞的宜家 Effektiv 工作台上。
<br> <br>引人注目的是那张挪威设计的 Stokke Duo 椅子，材质是木头和皮革。对设计师而言，这张椅子可以很好地缓解久坐的疲劳。这张椅子还可以调整各种坐姿。<br> <br>
三显示器的乌托邦
<br> <br>这个<a href="http://www.flickr.com/photos/sokram/3301053277/">充满阳刚味道的桌面</a>形神具备，所有装备都完美契合，除了那个白得晃眼的键盘。这个桌面的主人将显示器分散开，形成了两套桌面。<br> <br>
一个电子迷兼醉鬼的桌面
<br> <br>这个办公室的主人叫 PanHandle Joe，他将有限的壁柜塞满了各种电子玩意儿，这个<a href="http://www.flickr.com/photos/joearnold/2879849236/in/photostream/">工作台</a>的特点是一溜6台显示器一字摆开，旁边还有一台笔记本电脑，以防那6台显示器不够用。这还没完，PanHandle Joe 还未自己配备了一个小酒吧，有18瓶不同口味的 Jack Daniel，一冰箱的啤酒。<br> <br>
很 SOHO
<br> <br>这个办公室显得没那么高科技，也很简陋。Mac Mini 加无线苹果键盘让这个空间很整洁，Audioengine  A5 书架音箱省了低音喇叭的空间。
<br> <br>宜家的桌子虽然廉价但可以显示你的风格，那个巨大的靠墙的橱柜看上去很不错。这个<a href="http://www.flickr.com/photos/marc0047/3084490030/in/pool-justsetups">桌面</a>所有的东西都各得其所，除了那辆有些不合时宜的自行车，虽然不合时宜，但很有一种不可捉摸的欧陆风格。
<br> <br>本文国际来源：<a href="http://www.ahoys.com/blog/7-seriously-enviable-office-desk-setups">http://www.ahoys.com/blog/7-seriously-enviable-office-desk-setups</a> <br>中文翻译来源：<a href="http://www.comsharp.com/">COMSHARP CMS</a> 官方网站
➜Google工程师寻求将Python性能提高5倍
https://www.solidot.org/story?sid=10519	39900
<a href="http://www.comsharp.com/">COMSHARP CMS</a> 写道 "Google 的 Python 工程师启动了一个叫做 Unladen Swallow 的项目，寻求提升 Python 编程语言的性能，项目的目标之一是用基于 LLVM 的 JIT 环境取代 Python 的虚拟机，最终将 Python 的性能提升5倍。该项目是 CPython  运行时的一个分支，并将同 Python 的主干兼容。"           Unladen Swallow 项目的的目标是使用 <a href="http://arstechnica.com/open-source/news/2008/11/things-that-go-clang-in-the-night-llvm-2-4-released.ars">LLVM</a> （Low Level Virtual Machine）编译架构建立一个即时编译引擎，取代 Python 自己的虚拟机。这一方法优势明显，就像开发者们在<a href="http://code.google.com/p/unladen-swallow/wiki/ProjectPlan">项目计划</a>中描述的那样，该项目使 Python 到 register-based 的虚拟机成为可能，并为将来的优化工作铲平道路。
<br> <br>采用 LLVM 还为更多在 Python 代码中集成其它语言敞开了大门，因为 LLVM 中间层是对语言无关的。
<br> <br>Unladen Swallow 项目还将带来运行时的其它改进，并更好地应用现代硬件的优势。多核处理器的并行处理引起很多开发者的关注，比如他们正考虑实现一个并行的回收器。他们还将改善 Python 的多线程功能以解决 <a href="http://www.python.org/doc/2.4/api/threads.html">Global Interpreter Lock</a> 死锁问题。
<br> <br>虽然该项目刚刚启动，一个实验性的原型已经建立，源代码可以从 <a href="http://code.google.com/p/unladen-swallow/source/checkout">Google Code</a> 站点的版本控制系统下载。当前的一些设计据说已经可以在某些场合<a href="http://code.google.com/p/unladen-swallow/wiki/Releases">提升性能</a>。
<br> <br>他们的第二个里程碑，预计在2009年第二季度展开，这个阶段将有望实现等效的 LLVM 对 Python 虚拟机的替换。
<br> <br>Unladen Swallow 的开发者们希望最终可以在一些对性能要求严格的应用中，用 Python 语言取代 C 语言。他们在 Python 2.6 的基础上展开工作，这样可以兼容目前大量的已有 Python 项目，他们还会对 <a href="http://arstechnica.com/open-source/news/2008/12/python-3-0-sheds-backwards-compatibility.ars">Python 3</a> 提供平滑过度。
<br> <br>Python 在企业环境应用广泛，也是 Google 内部架构以及 App Engine 的主要技术。Google 对 Python 的投资将使这门语言在快速 Web 程序开发中更具魅力。
<br> <br>本文国际来源：<a href="http://arstechnica.com/open-source/news/2009/03/google-launches-project-to-boost-python-performance-by-5x.ars">http://arstechnica.com/open-source/news/2009/03/google-launches-project-to-boost-python-performance-by-5x.ars</a> <br>中文翻译来源：<a href="http://www.comsharp.com/">COMSHARP CMS</a> 官方网站
➜豆瓣网恢复创建小组功能
https://www.solidot.org/story?sid=10520	41100
小菊 写道"在经过前一轮的网络狂潮后，瘦身战役颇见成效的豆瓣网（douban.com）于今日重新开放了旗下“豆瓣小组”板块的<a href="http://www.douban.com/group/new_group">小组创建功能</a>。但与此同时，创建步骤必须通过其工作人员的人工审查。<i> “考虑到中国法律法规和相关政策的要求，豆瓣不欢迎色情、激进话题、意识形态方面的讨论，并保留解散这类主题小组的权利。 ”<br>希望相关人员都接受过通过小组名称和简介来占卜小组未来走向的专业训练。"</i>
➜Conficker天网将在4月1日启动
https://www.solidot.org/story?sid=10521	43800
2008年底出现的<a href="http://en.wikipedia.org/wiki/Conficker">Conficker</a>（名字来自德文，意思是能修改系统配置）蠕虫利用系统漏洞感染了上千万台未打补丁的Windows电脑，潜在危害巨大，甚至连微软都要<a href="__SLASHLINK__" sect="it" sid="09/02/13/0237254" sn="article" tid="32">悬赏25万美金</a>缉拿Conficker蠕虫的作者，但作者身份仍然神秘莫测，无人知晓，而距离Conficker蠕虫网络的启动仅有数天之遥了。<i>
Conficker蠕虫已有多个变种，变种A能创造一个HTTP服务器，打开1024到10000之间的随机端口，它还能重置系统还原点。Conficker蠕虫采用了P2P技术，因此一个数百万级的Conficker蠕虫网络能干什么是难以想象的。它将是作者手中的一只时刻准备进攻的黑暗大军。<a href="http://i.gizmodo.com/5183751/giz-explains-how-a-brainy-worm-might-jack-the-worlds-pcs-on-april-1">它的激活日期是4月1日</a>，微软声称打上补丁就没事，我们只能拭目以待了。</i>